version: "3.6"
services:

  traefik:
    env_file: .env
    image: traefik:latest
    hostname: proxy
    domainname: ${TDS_DOMAINNAME}
    container_name: "proxy"
    restart: always
    command: --web --api --docker --docker.domain=entwicklung
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 8080:8080/tcp
    networks:
      private:
        aliases:
          - traefik
          - proxy
      public:
        aliases:
          - traefik.${TDS_DOMAINNAME}
          - proxy.${TDS_DOMAINNAME}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${TDS_VOLUMEDIR}/traefik/traefik.toml:/traefik.toml"
      - "${TDS_VOLUMEDIR}/traefik/logs/access_traefik.log:/var/log/access_traefik.log"
      - "${TDS_VOLUMEDIR}/traefik/logs/traefik.log:/var/log/traefik.log"
      - "${TDS_VOLUMEDIR}/.config/certs/:/certs/"
    #   - "${TDS_VOLUMEDIR}/traefik/acme.json:/acme.json"
    labels:
      traefik.enable: "true"
      traefik.backend: "proxy"
      traefik.docker.network: "public"
      traefik.port: "8080"
      traefik.frontend.rule: "Host:proxy.${TDS_DOMAINNAME}"

  portainer:
    env_file: .env
    image: portainer/portainer:latest
    container_name: "portainer"
    restart: always
    command: -H unix:///var/run/docker.sock --logo "${TDS_BRANDING_LOGO_URL}"
    networks:
      private:
        aliases:
          - portainer
      public:
        aliases:
          - portainer.${TDS_DOMAINNAME}
    environment:
      TZ: "${TDS_TIMEZONE}"
    depends_on:
      - traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${TDS_VOLUMEDIR}/portainer/data:/data"
#     - "${TDS_VOLUMEDIR}/portainer/config/templates.json:/templates.json"
    labels:
      traefik.enable: "true"
      traefik.backend: "portainer"
      traefik.docker.network: "public"
      traefik.port: "9000"
      traefik.frontend.rule: "Host:portainer.${TDS_DOMAINNAME}"

  mailhog:
    env_file: .env
    image: mailhog/mailhog:latest
    container_name: "mailhog"
    restart: always
    command: ["-storage=maildir", "-maildir-path=/maildir"]
    networks:
      private:
        aliases:
          - mailhog
          - mail
      public:
        aliases:
          - mailhog.${TDS_DOMAINNAME}
          - mail.${TDS_DOMAINNAME}
    depends_on:
      - traefik
    volumes:
      - "${TDS_VOLUMEDIR}/mailhog/mails:/maildir"
    labels:
      traefik.enable: "true"
      traefik.backend: "mailhog"
      traefik.docker.network: "public"
      traefik.port: "8025"
      traefik.frontend.rule: "Host:mail.${TDS_DOMAINNAME}"

  gitea:
    env_file: .env
    image: gitea/gitea:latest
    container_name: "gitea"
    domainname: ${TDS_DOMAINNAME}
    hostname: "gitea"
    restart: always
    stop_grace_period: 30s
    ports:
      - ${TDS_GIT_SSHPORT}:22/tcp
    networks:
      private:
        aliases:
          - gitea.${TDS_DOMAINNAME}
          - gitea
          - git
      public:
        aliases:
          - gitea.${TDS_DOMAINNAME}
          - git.${TDS_DOMAINNAME}
    environment:
      APP_NAME: "${TDS_BRANDING_COMPANY_NAME} GIT Versioning Server"
      RUN_MODE: dev
      SSH_DOMAIN: gitea.${TDS_DOMAINNAME}
      SSH_PORT: ${TDS_GIT_SSHPORT}
      DISABLE_SSH: "false"
      HTTP_PORT: 3000
      ROOT_URL: "https://gitea.${TDS_DOMAINNAME}"
      DB_TYPE: mysql
      DB_HOST: gitdb.${TDS_DOMAINNAME}:3306
      DB_NAME: gitea
      DB_USER: ${TDS_MYSQL_GITEAUSER}
      DB_PASSWD: ${TDS_MYSQL_GITEAPWD}
      INSTALL_LOCK: "FALSE"
      DISABLE_REGISTRATION: "FALSE"
      REQUIRE_SIGNIN_VIEW: "TRUE"
      USER_UID: ${TDS_GIT_USER_UID}
      USER_GID: ${TDS_GIT_USER_GID}
    depends_on:
      - traefik
      - giteadb
    links:
      - giteadb
    volumes:
      - "${TDS_VOLUMEDIR}/gitea/data:/data"
      - "${TDS_GIT_REPO_DIR}:/data/git/repositories"
    labels:
      traefik.enable: "true"
      traefik.backend: "gitea"
      traefik.frontend.entryPoints: "https"
      traefik.frontend.passHostHeader: "true"
      traefik.docker.network: "public"
      traefik.port: "3000"
      traefik.frontend.rule: "Host: gitea.${TDS_DOMAINNAME}"

  giteadb:
    env_file: .env
    image: mariadb:latest
    container_name: "giteadb"
    domainname: ${TDS_DOMAINNAME}
    hostname: "giteadb"
    restart: always
    stop_grace_period: 30s
    networks:
      private:
        aliases:
          - gitdb
    environment:
      MYSQL_ROOT_PASSWORD: ${TDS_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${TDS_MYSQL_GITEAUSER}
      MYSQL_PASSWORD: ${TDS_MYSQL_GITEAPWD}
      MYSQL_DATABASE: gitea
    volumes:
      - "${TDS_VOLUMEDIR}/gitea/mysql:/var/lib/mysql"

  pma:
    env_file: .env
    image: phpmyadmin/phpmyadmin:latest
    container_name: "pma"
    hostname: pma
    domainname: ${TDS_DOMAINNAME}
    restart: always
    networks:
      private:
        aliases:
          - pma
      public:
        aliases:
          - pma.${TDS_DOMAINNAME}
    depends_on:
      - giteadb
      - devshopdb
    links:
      - giteadb
      - devshopdb
    environment:
      PMA_ABSOLUTE_URI: "http://pma.${TDS_DOMAINNAME}"
      PMA_HOSTS: "gitdb,devshopdb"
      PMA_PORT: "3306"
      PHP_UPLOAD_MAX_FILESIZE: "1G"
      PHP_MAX_INPUT_VARS: "1G"
      MYSQL_ROOT_PASSWORD: ${TDS_MYSQL_ROOT_PASSWORD}
    labels:
      traefik.enable: "true"
      traefik.backend: "pma"
      traefik.docker.network: "public"
      traefik.port: "80"
      traefik.frontend.rule: "Host:pma.${TDS_DOMAINNAME}"

  drone:
    env_file: .env
    image: drone/drone:1.0.0-rc.5
    container_name: "drone"
    restart: always
    stop_grace_period: 30s
    networks:
      private:
        aliases:
          - drone
      public:
        aliases:
          - drone.${TDS_DOMAINNAME}
          - ci.${TDS_DOMAINNAME}
    depends_on:
      - gitea
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${TDS_VOLUMEDIR}/drone/data:/var/lib/drone/"
      - "${TDS_VOLUMEDIR}/.config/certs/wildcard.crt:/etc/certs/drone.company.com/wildcard.crt"
      - "${TDS_VOLUMEDIR}/.config/certs/wildcard.key:/etc/certs/drone.company.com/wildcard.key"
    environment:
      - DRONE_GITEA_SERVER=http://gitea.${TDS_DOMAINNAME}:3000
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_SERVER_HOST=http:/drone.${TDS_DOMAINNAME}
      - DRONE_SERVER_PROTO=http
#      - DRONE_TLS_CERT=/etc/certs/drone.company.com/wildcard.crt
#      - DRONE_TLS_KEY=/etc/certs/drone.company.com/wildcard.key
      - DRONE_TLS_AUTOCERT=false
      - DRONE_USER_CREATE=username:${TDS_DRONE_ADMIN_USER},admin:true
      - DRONE_LOGS_COLOR=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_PRETTY=true
    labels:
      traefik.enable: "true"
      traefik.backend: "drone"
      traefik.docker.network: "public"
      traefik.port: "80"
      traefik.frontend.rule: "Host: drone.${TDS_DOMAINNAME}"
#
##  dashboard:
##    image: geerlingguy/drupal-vm
##    container_name: dashboard
##    restart: always
##    stop_grace_period: 30s
##    command: /lib/systemd/systemd
##    privileged: true
##    volumes:
##      - "${TDS_VOLUMEDIR}/dashboard/data:/var/www/drupalvm/drupal:rw,delegated"
##      - /sys/fs/cgroup:/sys/fs/cgroup:ro
##    networks:
##      private:
##        aliases:
##          - dashboard
##      public:
##        aliases:
##          - dashboard.${TDS_DOMAINNAME}
##    labels:
##      traefik.enable: "true"
##      traefik.backend: "dashboard"
##      traefik.docker.network: "public"
##      traefik.port: "80"
##      traefik.frontend.rule: "Host: dashboard.${TDS_DOMAINNAME}"
#
#  devshop:
#    image: aegir/hostmaster
#    container_name: "devshop"
#    domainname: ${TDS_DOMAINNAME}
#    hostname: "devshop"
#    restart: always
#    stop_grace_period: 30s
#    ports:
#      - ${TDS_DEVSHOP_SSHPORT}:22/tcp
#    networks:
#      private:
#        aliases:
#          - dev
#          - devshop
#      public:
#        aliases:
#          - dev.${TDS_DOMAINNAME}
#          - devshop.${TDS_DOMAINNAME}
#    environment:
#      AEGIR_VERSION: "7.x-3.170"
#      PROVISION_VERSION: "7.x-3.172"
#      AEGIR_CLIENT_EMAIL: "${TDS_BRANDING_INFO_EMAIL}"
#      AEGIR_MAKEFILE: "https://raw.githubusercontent.com/opendevshop/devshop/1.5.0-rc6/build-devmaster.make"
#      AEGIR_PROFILE: "devmaster"
#      AEGIR_HOSTMASTER_ROOT: "/var/aegir/devmaster"
#      AEGIR_UID: 1000
#      AEGIR_DATABASE_SERVER: devshopdb
#      MYSQL_ROOT_PASSWORD: ${TDS_MYSQL_ROOT_PASSWORD}
#    depends_on:
#      - traefik
#      - devshopdb
#    links:
#      - devshopdb
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "${TDS_VOLUMEDIR}/devshop/data:/var/aegir"
#    labels:
#      traefik.enable: "true"
#      traefik.backend: "devshop"
#      traefik.docker.network: "public"
#      traefik.port: "80"
#      #traefik.frontend.rule: "Host: devshop.${TDS_DOMAINNAME}"
#      traefik.frontend.rule: "HostRegexp:{subdomain:.+}.devshop.entwicklung,devshop.entwicklung"
#      traefik.frontend.priority: "1"
#
  devshopdb:
    image: mariadb:latest
    container_name: "devshopdb"
    domainname: ${TDS_DOMAINNAME}
    hostname: "devshopdb"
    restart: always
    stop_grace_period: 30s
    networks:
      private:
        aliases:
          - devshopdb
    environment:
      MYSQL_ROOT_PASSWORD: ${TDS_MYSQL_ROOT_PASSWORD}
    volumes:
      - "${TDS_VOLUMEDIR}/devshop/mysql:/var/lib/mysql"
    labels:
      traefik.enable: "false"

networks:
  public:
    driver: bridge
    name: public
  private:
    name: private
