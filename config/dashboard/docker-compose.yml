version: "3.6"
services:

  ## Adapted from https://github.com/wodby/docker4drupal

  mariadb:
    env_file: .env
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      # - ${PROJECT_DIR}/db-init/mysql:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - "${PROJECT_DIR}/mysql:/var/lib/mysql"

  #  postgres:
  #    env_file: .env
  #    image: wodby/postgres:$POSTGRES_TAG
  #    container_name: "${PROJECT_NAME}_postgres"
  #    stop_grace_period: 30s
  #    environment:
  #      POSTGRES_PASSWORD: $DB_PASSWORD
  #      POSTGRES_DB: $DB_NAME
  #      POSTGRES_USER: $DB_USER
  #    volumes:
  #      - "${PROJECT_DIR}/db-init/postgres:/docker-entrypoint-initdb.d" # Place init file(s) here.
  #      - "${PROJECT_DIR}/postgres:/var/lib/postgresql/data" # Use bind mount

  php:
    env_file: .env
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mail.entwicklung:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
    volumes:
      - "${PROJECT_DIR}/data:/var/www/html"

  apache:
    env_file: .env
    image: wodby/apache:$APACHE_TAG
    container_name: "${PROJECT_NAME}_apache"
    depends_on:
      - php
    environment:
      APACHE_LOG_LEVEL: debug
      APACHE_BACKEND_HOST: php
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/web
    volumes:
      - "${PROJECT_DIR}/data:/var/www/html"
    networks:
      public:
        aliases:
          - ${PROJECT_BASE_URL}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "public"
      traefik.frontend.entryPoints: "http,https"
      traefik.frontend.passHostHeader: "true"
      traefik.backend: "${PROJECT_NAME}_apache"
      traefik.port: "80"
      traefik.frontend.rule: "Host:${PROJECT_BASE_URL}"

  #  nginx:
  #    env_file: .env
  #    image: wodby/nginx:$NGINX_TAG
  #    container_name: "${PROJECT_NAME}_nginx"
  #    depends_on:
  #      - php
  #    environment:
  #      NGINX_STATIC_OPEN_FILE_CACHE: "off"
  #      NGINX_ERROR_LOG_LEVEL: debug
  #      NGINX_BACKEND_HOST: php
  #      NGINX_SERVER_ROOT: /var/www/html/web
  #      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
  #    volumes:
  #      - "${PROJECT_DIR}/data:/var/www/html"
  #    networks:
  #      public:
  #        aliases:
  #          - ${PROJECT_BASE_URL}
  #    labels:
  #      traefik.enable: "true"
  #      traefik.docker.network: "public"
  #      traefik.frontend.entryPoints: "http,https"
  #      traefik.frontend.passHostHeader: "true"
  #      traefik.backend: "${PROJECT_NAME}_nginx"
  #      traefik.port: "80"
  #      traefik.frontend.rule: "Host:${PROJECT_BASE_URL}"

  #  varnish:
  #    env_file: .env
  #    image: wodby/varnish:$VARNISH_TAG
  #    container_name: "${PROJECT_NAME}_varnish"
  #    depends_on:
  #      - nginx
  #    environment:
  #      VARNISH_SECRET: ${VARNISH_SECRET}
  #      VARNISH_BACKEND_HOST: nginx
  #      VARNISH_BACKEND_PORT: 80
  #      VARNISH_CONFIG_PRESET: drupal
  #      VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
  #    networks:
  #      public:
  #        aliases:
  #          - varnish.${PROJECT_BASE_URL}
  #    labels:
  #      traefik.enable: "true"
  #      traefik.docker.network: "public"
  #      traefik.backend: "${PROJECT_NAME}_varnish"
  #      traefik.port: "6081"
  #      traefik.frontend.rule: "Host:varnish.${PROJECT_BASE_URL}"

  #  redis:
  #    container_name: "${PROJECT_NAME}_redis"
  #    image: wodby/redis:$REDIS_TAG

  adminer:
    env_file: .env
    container_name: "${PROJECT_NAME}_adminer"
    image: wodby/adminer:$ADMINER_TAG
    environment:
      # For PostgreSQL:
      #      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: $DB_HOST
      ADMINER_DEFAULT_DB_NAME: $DB_NAME
    networks:
      public:
        aliases:
          - adminer.${PROJECT_BASE_URL}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "public"
      traefik.frontend.entryPoints: "http,https"
      traefik.frontend.passHostHeader: "true"
      traefik.backend: "${PROJECT_NAME}_adminer"
      traefik.port: "9000"
      traefik.frontend.rule: "Host:adminer.${PROJECT_BASE_URL}"

  #  solr:
  #    env_file: .env
  #    image: wodby/solr:$SOLR_TAG
  #    container_name: "${PROJECT_NAME}_solr"
  #    environment:
  #      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
  #      SOLR_HEAP: 1024m
  #    networks:
  #      public:
  #        aliases:
  #          - solr.${PROJECT_BASE_URL}
  #    labels:
  #      traefik.backend: "${PROJECT_NAME}_solr"
  #      traefik.port: "8983"
  #      traefik.frontend.rule: "Host:solr.${PROJECT_BASE_URL}"

  #  drupal-node:
  #    env_file: .env
  #    image: wodby/drupal-node:$DRUPAL_NODE_TAG
  #    container_name: "${PROJECT_NAME}_drupal_nodejs"
  #    command: sh -c 'npm install && npm run start'
  #    environment:
  #       NODE_SERVICE_KEY: node-service-key
  #    volumes:
  #      - "${PROJECT_DIR}/data/app:/app"
  #    networks:
  #      public:
  #        aliases:
  #          - nodejs.${PROJECT_BASE_URL}
  #    labels:
  #      traefik.backend: "${PROJECT_NAME}_nodejs"
  #      traefik.port: "8080"
  #      traefik.frontend.rule: "Host:nodejs.${PROJECT_BASE_URL}"

  #  memcached:
  #    env_file: .env
  #    container_name: "${PROJECT_NAME}_memcached"
  #    image: wodby/memcached:$MEMCACHED_TAG

  #  rsyslog:
  #    env_file: .env
  #    container_name: "${PROJECT_NAME}_rsyslog"
  #    image: wodby/rsyslog:$RSYSLOG_TAG

  #  node:
  #    env_file: .env
  #    image: wodby/node:$NODE_TAG
  #    container_name: "${PROJECT_NAME}_node"
  #    command: sh -c 'yarn install && yarn run start'
  #    working_dir: /var/www/html/app
  #    ports:
  #      - "3000:3000/tcp"
  #    volumes:
  #      -  "${PROJECT_DIR}/data/:/var/www/html"
  #    networks:
  #      public:
  #        aliases:
  #          - front.${PROJECT_BASE_URL}
  #    labels:
  #      traefik.backend: "${PROJECT_NAME}_node"
  #      traefik.port: "3000"
  #      traefik.frontend.rule: "Host:front.${PROJECT_BASE_URL}"

  #  elasticsearch:
  #    env_file: .env
  #    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #    environment:
  #      ES_JAVA_OPTS: "-Xms500m -Xmx500m"

networks:
  public:
    external:
      name: public

